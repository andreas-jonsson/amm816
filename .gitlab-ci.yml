image: golang:latest

variables:
  REPO_NAME: gitlab.com/phix/amm812

before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  - apt-get -qq update
  - apt-get -qq install -y zip

stages:
  - test
  - build

format:
    stage: test
    script:
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test -race $(go list ./... | grep -v /vendor/)

compile:
    stage: build
    variables:
      GOARCH: amd64
    script:
      - GOOS=windows && go build -o $CI_PROJECT_DIR/software/emulator/amm_windows-amd64.exe $CI_PROJECT_DIR/software/emulator/amm.go
      - GOOS=linux && go build -o $CI_PROJECT_DIR/software/emulator/amm_linux-amd64 $CI_PROJECT_DIR/software/emulator/amm.go
      - GOOS=darwin && go build -o $CI_PROJECT_DIR/software/emulator/amm_osx-amd64.exe $CI_PROJECT_DIR/software/emulator/amm.go
      - zip -rq emulator.zip amm_windows-amd64.exe amm_linux-amd64 amm_osx-amd64
    artifacts:
      paths:
        - emulator.zip
